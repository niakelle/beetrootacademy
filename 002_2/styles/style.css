@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300&display=swap');

:root {
    --color-Orange: #FF9900;
    --color-Black-Font: #173A56;
}

/*
- Как для первой работы классы и структура ОЧЕНЬ ХОРОШО прописанна.
- Сброс стилей Что ето :
    _reset.scss — как и видно по названию файла, сбрасывает большинство стилей браузера, которые в нем заданы по
    умолчанию (а такие действительно есть, просто откройте голый HTML).

    _normalize.scss — этот файл не только задает стили по умолчанию там где это необходимо, но и исправляет некоторые
    недостатки старых браузеров (привет IE).

    Если не использовать ето - то твои стили/верстка будет заточена только под конкретные особенности (под один браузер)
    чот бы не фиксать баги для каждого браузера по отдельности нужно сбрасывать дефолтные стили

    @info https://github.com/necolas/normalize.css/blob/master/normalize.css
    @info all = https://developer.mozilla.org/ru/docs/Web/CSS/all
    @info unset = https://developer.mozilla.org/en-US/docs/Web/CSS/unset

В следуйших работах от тебя хочу видеть
1) использование препроцессора
2) структуру вложенности по БЕМ. МОДИФИКАТОР пока НЕ используй - иначе ето сильно тебе усложнит тебе жизнь.
   стили задавай для блоков и елементов без использования хтмл-тегов
3) Ето скорей уже моя хотелка - используй переменные для указания цветов


Повторю пример с переменными в css :
:root {
   @Info
   1) https://developer.mozilla.org/en-US/docs/Web/CSS/var()
   2) https://developer.mozilla.org/ru/docs/Web/CSS/Using_CSS_custom_properties

--color-Red: Red;
--color-Brown: Brown;
--color-Orange: Orange;
}


Повторю Теорию что такое БЕМ :
БЛОК - ето елемент страници который может быть копирован в любое место страници, без искажения стилей внутри.
       блоки могут вкладыватся друг в друга.
ЕЛЕМЕНТ - строго пренадлежит БЛОКу внутри которого он находится. Елемента за блоком быть не может.
МОДИФИКАТОР - класс который будет изменять повидение ЕЛЕМЕНТов и БЛОКов и неважно где.
следовательно

СЛЕДОВАТЕЛЬНО нужно строить дерево css классов в HTMLе.
 К примеру такая структура в HTML :
краткая запись (сделана для Emmet плагина. Вставить в HTML и нажать ТАБ):
  ``` .header>.header__logo>.header__icon+.header__title^+.header__menu.menu>.menu__item*4>.menu__icon+.menu__title ```
развернутая запись : ```
    <div class="header">
        <div class="header__logo">
            <div class="header__icon"></div>
            <div class="header__title"></div>
        </div>
        <div class="header__menu menu">
            <div class="menu__item">
                <div class="menu__icon"></div>
                <div class="menu__title"></div>
            </div>
            <div class="menu__item">
                <div class="menu__icon"></div>
                <div class="menu__title"></div>
            </div>
            <div class="menu__item">
                <div class="menu__icon"></div>
                <div class="menu__title"></div>
            </div>
            <div class="menu__item">
                <div class="menu__icon"></div>
                <div class="menu__title"></div>
            </div>
        </div>
    </div>
```
В данном примере:
header и menu --- Ето Блоки
menu__item / menu__title / menu__icon --- Елементы блока "menu"
header__logo / header__icon / header__menu  --- Елементы блока "header"
МОДИФИКАТОРы - я неприводил в пример, для начала нужно освоить такую структуру.

*/


body {
    font-family: 'Poppins', sans-serif;
}

nav {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-top: 20px;
    padding: 16px 0;
}

a {
    text-decoration: none;
}

nav .nav-logo {
    width: 210px;
    height: 50px;
    padding: 0;
    margin: 0 0 0 11%;
}

nav .nav-logo a span {
    margin-left: 7px;
    color: var(--color-Black-Font);
    font-family: Arial, Helvetica, sans-serif;
    font-weight: 900;
    font-size: 2.2em;
    letter-spacing: -0.08em;
}

nav .nav-logo a:visited span {
    color: var(--color-Black-Font)
}

nav .nav-links {
    width: 440px;
    height: 30px;
    margin-right: -20%;
    padding: 0;
}

nav .nav-links a {
    display: inline-block;
    text-decoration: none;
    color: #2F281E;
    line-height: 28px;
    font-size: 1em;
    margin-right: 30px;
    font-weight: 600;
}

nav .nav-links a:last-of-type {
    margin-right: 0px;
}

nav .nav-buttons {
    margin-right: 7%;
}

nav .nav-buttons a {
    display: inline-block;
    box-sizing: border-box;    
    text-align: center;
    font-size: 1em;
    padding: 8px 0;
    border: 1px solid #BCD0E5;
    border-radius: 5%;
}

/* Ниже находится пример того как НЕ нужно выбирать конкретные элементы.
Нужно делать это через более специфический селектор, который не сломает вёрстку
если поменять кнопки(ссылки) местами. Но т.к. сейчас это часть учебного проекта, 
то в этот раз я использую правило "работает - не трогай"
 - Правильно !!!
*/

nav .nav-buttons a:first-of-type {
    width: 102px;
    height: 46px;
    color: var(--color-Black-Font)
}

nav .nav-buttons a:nth-of-type(2) {
    width:110px;
    height: 46px;
    background-color: var(--color-Orange);
    color: #fff;
}

header {
    display: flex;
    justify-content: space-evenly;
    margin-top: 30px;
    margin-bottom: 110px;
}

header .header-section-one {
    width: 37%;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

header .header-section-one h1 {
    font-size: 3em;
    line-height: 54px;
}

header .header-section-one p {
    font-size: 1.3em;
}

header .header-section-one .header-button-wrapper {
    display: flex;
    align-items: center;
    margin-top: 45px;
    padding: 0;
}

header .header-section-one .header-button-wrapper .get-started-button {
    display: block;
    box-sizing: border-box;
    width: 175px;
    height: 53px;
    padding: 14px 0;
    background-color: var(--color-Orange);
    color: #fff;
    font-weight: bold;
    text-align: center;
}

header .header-section-one .header-button-wrapper .watch-video-button {
    display: block;
    box-sizing: border-box;
    width: 161px;
    height: 23px;
    margin-left: 25px;
    font-weight: bolder;
    text-decoration: underline;
    color: var(--color-Orange);
}

header .header-section-one .header-button-wrapper .watch-video-button svg {
    margin-right: 8px;
    vertical-align:text-top;
}

header .header-section-two {
    width: 43%
}

main .feature h2 {
    display: block;
    width: 540px;
    margin: 0 auto 55px auto;
    text-align: center;
    font-size: 2.25em;
    font-weight: bold;
}

main .feature .card-list {
    display: flex;
    justify-content: space-evenly;
    margin-bottom: 30px;
}

main .feature .card-list .card-item {
    width: 240px;
    height: 178px;
}

main .feature .card-list .card-item:last-of-type {
    height: 204px;
}

main .feature .feature-button {
    display: block;
    box-sizing: border-box;
    width: 175px;
    height: 53px;
    padding: 14px 0;
    margin: 0 auto 90px auto;
    background-color: var(--color-Orange);
    color: #fff;
    font-weight: bolder;
    text-transform: uppercase;
    text-align: center;
}

.second-screen {
    display: flex;
    justify-content: space-evenly;
}

.second-screen-wrapper {
    width: 486px;
}

.third-screen {
    margin-top: 100px;
    display: flex;
    justify-content: space-evenly;
}

.third-screen-wrapper {
    width: 486px;
}

.third-screen .third-screen-wrapper .wrapper-checkbox {
    margin-top: 30px;
}

.third-screen .third-screen-wrapper .wrapper-checkbox svg {
    display: inline-block;
    vertical-align: center;
    margin: 0;
}

.third-screen .third-screen-wrapper .wrapper-checkbox p {
    display: inline-block;
    max-width: 445px;
    margin: 0;
    /* vertical-align: center; */
}


.fourth-screen {
    display: flex;
    justify-content: space-evenly;
    margin-top: 100px;
}

.fourth-screen .fourth-screen-wrapper {
    width: 486px;
}


footer {
    width: 80%;
    margin: 145px auto 0 auto;
    border-top: 1px solid rgba(188, 208, 229, 0.49);
}

footer .footer-wrapper {
    display: flex;
    height: 210px;
    margin: 100px 0 85px 0;
    justify-content: space-between;
}

footer .footer-wrapper .footer-logo {
    justify-content: flex-start;
}

footer .footer-wrapper .footer-logo {
    width: 210px;
    height: 50px;
    padding: 0;
    margin: 0;
}

footer .footer-wrapper .footer-logo a span {
    margin-left: 7px;
    color: var(--color-Black-Font);
    font-family: Arial, Helvetica, sans-serif;
    font-weight: 900;
    font-size: 2.2em;
    letter-spacing: -0.08em;
}

footer .footer-wrapper .footer-logo a:visited span {
    color: var(--color-Black-Font);
}

footer .footer-wrapper .first-column {
    display: flex;
    flex-flow: column;
    width: 118px;
    height: 205px;
    justify-content: flex-end;
}

footer .footer-wrapper .second-column {
    display: flex;
    flex-flow: column;
    width: 131px;
    height: 205px;
    justify-content: flex-end;
}

footer .footer-wrapper div a {
    display: block;
    width: 100%;
    line-height: 35px;
    color: #544837;
}

footer .footer-wrapper .footer-signup {
    display: flex;
    flex-flow: column;
    justify-content: flex-end;
}

footer .footer-wrapper .footer-signup input {
    box-sizing: border-box;
    width: 325px;
    height: 48px;
    border-color: #BCD0E5;
    border-radius: 5px;
}

footer .footer-wrapper .footer-signup .orange-button {
    display: block;
    box-sizing: border-box;
    width: 131px;
    height: 39px;
    margin-top: 20px;
    padding: 7px 0;
    background-color: var(--color-Orange);
    color: #fff;
    font-weight: bold;
    text-align: center;
}
